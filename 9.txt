Classfile /home/slvrfx/Documents/ASM/ASMBytecode_JCF/Accumulator.class
  Last modified Feb 20, 2024; size 899 bytes
  MD5 checksum 901cc9270261954bbbe7912971318047
  Compiled from "Accumulator.java"
public class Accumulator
  minor version: 0
  major version: 55
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #13                         // Accumulator
  super_class: #14                        // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #14.#25        // java/lang/Object."<init>":()V
   #2 = Class              #26            // java/util/Scanner
   #3 = Fieldref           #27.#28        // java/lang/System.in:Ljava/io/InputStream;
   #4 = Methodref          #2.#29         // java/util/Scanner."<init>":(Ljava/io/InputStream;)V
   #5 = Fieldref           #27.#30        // java/lang/System.out:Ljava/io/PrintStream;
   #6 = String             #31            // Please enter an integer
   #7 = Methodref          #32.#33        // java/io/PrintStream.println:(Ljava/lang/String;)V
   #8 = Methodref          #2.#34         // java/util/Scanner.nextInt:()I
   #9 = String             #35            // The sum of the numbers in the accumulator is:
  #10 = Methodref          #32.#36        // java/io/PrintStream.println:(I)V
  #11 = String             #37            // The loop has ended, the final accumulation is:
  #12 = Methodref          #2.#38         // java/util/Scanner.close:()V
  #13 = Class              #39            // Accumulator
  #14 = Class              #40            // java/lang/Object
  #15 = Utf8               <init>
  #16 = Utf8               ()V
  #17 = Utf8               Code
  #18 = Utf8               LineNumberTable
  #19 = Utf8               main
  #20 = Utf8               ([Ljava/lang/String;)V
  #21 = Utf8               StackMapTable
  #22 = Class              #41            // "[Ljava/lang/String;"
  #23 = Utf8               SourceFile
  #24 = Utf8               Accumulator.java
  #25 = NameAndType        #15:#16        // "<init>":()V
  #26 = Utf8               java/util/Scanner
  #27 = Class              #42            // java/lang/System
  #28 = NameAndType        #43:#44        // in:Ljava/io/InputStream;
  #29 = NameAndType        #15:#45        // "<init>":(Ljava/io/InputStream;)V
  #30 = NameAndType        #46:#47        // out:Ljava/io/PrintStream;
  #31 = Utf8               Please enter an integer
  #32 = Class              #48            // java/io/PrintStream
  #33 = NameAndType        #49:#50        // println:(Ljava/lang/String;)V
  #34 = NameAndType        #51:#52        // nextInt:()I
  #35 = Utf8               The sum of the numbers in the accumulator is:
  #36 = NameAndType        #49:#53        // println:(I)V
  #37 = Utf8               The loop has ended, the final accumulation is:
  #38 = NameAndType        #54:#16        // close:()V
  #39 = Utf8               Accumulator
  #40 = Utf8               java/lang/Object
  #41 = Utf8               [Ljava/lang/String;
  #42 = Utf8               java/lang/System
  #43 = Utf8               in
  #44 = Utf8               Ljava/io/InputStream;
  #45 = Utf8               (Ljava/io/InputStream;)V
  #46 = Utf8               out
  #47 = Utf8               Ljava/io/PrintStream;
  #48 = Utf8               java/io/PrintStream
  #49 = Utf8               println
  #50 = Utf8               (Ljava/lang/String;)V
  #51 = Utf8               nextInt
  #52 = Utf8               ()I
  #53 = Utf8               (I)V
  #54 = Utf8               close
{
  public Accumulator();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=1
         0: new           #2                  // class java/util/Scanner
         3: dup
         4: getstatic     #3                  // Field java/lang/System.in:Ljava/io/InputStream;
         7: invokespecial #4                  // Method java/util/Scanner."<init>":(Ljava/io/InputStream;)V
        10: astore_1
        11: iconst_0
        12: istore_2
        13: iconst_0
        14: istore_3
        15: iconst_0
        16: istore        4
        18: iload_2
        19: bipush        10
        21: if_icmpge     65
        24: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;
        27: ldc           #6                  // String Please enter an integer
        29: invokevirtual #7                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        32: aload_1
        33: invokevirtual #8                  // Method java/util/Scanner.nextInt:()I
        36: istore_3
        37: iload         4
        39: iload_3
        40: iadd
        41: istore        4
        43: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;
        46: ldc           #9                  // String The sum of the numbers in the accumulator is:
        48: invokevirtual #7                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        51: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;
        54: iload         4
        56: invokevirtual #10                 // Method java/io/PrintStream.println:(I)V
        59: iinc          2, 1
        62: goto          18
        65: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;
        68: ldc           #11                 // String The loop has ended, the final accumulation is:
        70: invokevirtual #7                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        73: getstatic     #5                  // Field java/lang/System.out:Ljava/io/PrintStream;
        76: iload         4
        78: invokevirtual #10                 // Method java/io/PrintStream.println:(I)V
        81: aload_1
        82: invokevirtual #12                 // Method java/util/Scanner.close:()V
        85: return
      LineNumberTable:
        line 7: 0
        line 8: 11
        line 9: 13
        line 10: 15
        line 12: 18
        line 13: 24
        line 14: 32
        line 15: 37
        line 17: 43
        line 18: 51
        line 19: 59
        line 23: 65
        line 24: 73
        line 26: 81
        line 28: 85
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class "[Ljava/lang/String;", class java/util/Scanner, int, int, int ]
          stack = []
        frame_type = 46 /* same */
}
SourceFile: "Accumulator.java"
